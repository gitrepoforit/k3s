---
- name: Join Control Plane Nodes to K3s Cluster
  hosts: k8s_controlplane
  become: true
  gather_facts: false

  tasks:
    - name: Fetch the K3s node token from the first control plane
      slurp:
        src: /var/lib/rancher/k3s/server/node-token
      register: node_token
      delegate_to: "{{ groups['k8s_controlplane'][0] }}"
      become: yes

    - name: Set the K3s token fact
      set_fact:
        k3s_token: "{{ node_token.content | b64decode | trim }}"

    - name: Check if node is already part of the cluster
      shell: kubectl get nodes | grep "{{ inventory_hostname }}"
      register: controlplane_check
      delegate_to: controlplane1
      ignore_errors: true
      changed_when: false

    - name: Join control plane node to the cluster
      when: controlplane_check.rc != 0
      shell: >
        curl -sfL https://get.k3s.io |
        K3S_URL=https://{{ hostvars[groups['k8s_controlplane'][0]]['ansible_host'] }}:6443
        K3S_TOKEN={{ k3s_token }}
        INSTALL_K3S_EXEC="server --tls-san {{ groups['k8s_controlplane'] | map('extract', hostvars, 'ansible_host') | join(' ') }}" sh -
      args:
        executable: /bin/bash
      failed_when: result.rc != 0
      register: result

- name: Join Worker Nodes to K3s Cluster
  hosts: k8s_worker
  become: true
  gather_facts: false

  tasks:
    - name: Fetch the K3s node token from the control plane
      slurp:
        src: /var/lib/rancher/k3s/server/node-token
      register: node_token
      delegate_to: "{{ groups['k8s_controlplane'][0] }}"
      become: yes

    - name: Set the K3s token fact
      set_fact:
        k3s_token: "{{ node_token.content | b64decode | trim }}"

    - name: Check if worker node is already part of the cluster
      shell: kubectl get nodes | grep "{{ inventory_hostname }}"
      register: worker_check
      delegate_to: controlplane1
      ignore_errors: true
      changed_when: false

    - name: Join worker node to the cluster
      when: worker_check.rc != 0
      shell: >
        curl -sfL https://get.k3s.io |
        K3S_URL=https://{{ hostvars[groups['k8s_controlplane'][0]]['ansible_host'] }}:6443
        K3S_TOKEN={{ k3s_token }} sh -
      args:
        executable: /bin/bash
      failed_when: result.rc != 0
      register: result
