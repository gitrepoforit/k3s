- name: Install K3s on Raspberry Pi Cluster
  hosts: k8s
  become: true

  tasks:
    - name: Disable swap completely
      shell: |
        dphys-swapfile swapoff
        dphys-swapfile uninstall
        update-rc.d dphys-swapfile remove
        swapoff -a
        sed -i '/ swap / s/^/#/' /etc/fstab
      ignore_errors: yes

    - name: Update bootloader if necessary
      shell: |
        sudo update-initramfs -u
      register: bootloader_updated

    - name: Update package list
      apt:
        update_cache: yes

    - name: Install required packages
      apt:
        name:
          - curl
          - apt-transport-https
          - software-properties-common

- name: Install K3s on First Control Plane (Cluster Init)
  hosts: controlplane1
  become: yes
  tasks:
    - name: Install K3s with embedded etcd
      shell: |
        curl -sfL https://get.k3s.io | INSTALL_K3S_EXEC="server --cluster-init --etcd-expose-metrics --write-kubeconfig-mode 644" sh -
      args:
        creates: /etc/rancher/k3s/k3s.yaml

    - name: Get node token
      shell: cat /var/lib/rancher/k3s/server/node-token
      register: node_token
      changed_when: false

    - name: Set node token fact
      set_fact:
        k3s_node_token: "{{ node_token.stdout }}"

- name: Install K3s on Additional Control Planes
  hosts: k8s_controlplane
  become: yes
  tasks:
    - name: Install K3s and join cluster
      shell: |
        curl -sfL https://get.k3s.io | INSTALL_K3S_EXEC="server --server https://{{ groups['k8s_controlplane'][0] }}:6443 --etcd-expose-metrics" K3S_TOKEN={{ hostvars['controlplane1']['k3s_node_token'] }} sh -
      args:
        creates: /etc/rancher/k3s/k3s.yaml
      when: inventory_hostname != 'controlplane1'

- name: Install K3s on Worker Nodes
  hosts: k8s_worker
  become: yes
  tasks:
    - name: Install K3s agent and join cluster
      shell: |
        curl -sfL https://get.k3s.io | INSTALL_K3S_EXEC="agent --server https://{{ groups['k8s_controlplane'][0] }}:6443" K3S_TOKEN={{ hostvars['controlplane1']['k3s_node_token'] }} sh -
      args:
        creates: /etc/rancher/k3s/k3s.yaml

    - name: Verify K3s installation
      command: k3s --version
      register: k3s_version_check

    - name: Fail if K3s is not installed
      fail:
        msg: "K3s installation failed"
      when: k3s_version_check.rc != 0

    - name: Reboot the system if necessary (excluding controlplane1)
      reboot:
        msg: "Rebooting after disabling swap"
      when: bootloader_updated.changed and inventory_hostname != 'controlplane1'

- name: Start K3s services on control plane nodes
  hosts: k8s_controlplane
  become: yes
  tasks:
    - name: Start K3s service
      service:
        name: k3s
        state: started
        enabled: yes

- name: Start K3s agent services on worker nodes
  hosts: k8s_worker
  become: yes
  tasks:
    - name: Start K3s agent service
      service:
        name: k3s-agent
        state: started
        enabled: yes