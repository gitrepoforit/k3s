---
- name: Ensure pip3, virtualenv, and required Python packages are installed
  hosts: localhost
  tasks:

    - name: Activate virtual environment (using environment keyword)
      ansible.builtin.shell:
        cmd: echo "Virtual Environment Activated"
      environment:
        PATH: "/opt/k3s_venv/bin:{{ ansible_env.PATH }}"

    - name: Update apt cache
      apt:
        update_cache: yes
      become: true

    - name: Install required system packages
      apt:
        name:
          - python3-pip
          - python3-venv
          - python3-full
        state: present
      become: true

    - name: Create virtual environment directory if not present
      file:
        path: /opt/k3s_venv
        state: directory
        mode: '0755'
      become: true

    - name: Create virtual environment for Python
      command: python3 -m venv /opt/k3s_venv
      args:
        creates: /opt/k3s_venv/bin/activate

    - name: Install required Python packages using requirements.txt in virtual environment
      pip:
        requirements: "{{ playbook_dir }}/requirements.txt"
        virtualenv: /opt/k3s_venv

    - name: Configure pip to use Ansible Galaxy index in virtual environment
      ansible.builtin.command:
        cmd: /opt/k3s_venv/bin/pip config set global.index-url https://galaxy.ansible.com/api/automation-hub/v3/collections/

    - name: Remove Ansible collection cache directory (if it exists)
      ansible.builtin.file:
        path: ~/.ansible/collections
        state: absent

    - name: Install kubernetes.core Ansible collection (using ansible-galaxy)
      ansible.builtin.command:
        cmd: /opt/k3s_venv/bin/ansible-galaxy collection install kubernetes.core

    - name: Ensure user collection directory has priority in ansible.cfg
      ansible.builtin.blockinfile:
        path: /etc/ansible/ansible.cfg
        block: |
          [defaults]
          COLLECTIONS_PATHS = ["/home/raccoon/.ansible/collections", "/usr/share/ansible/collections"]
      become: true
      become_user: root

    - name: Verify pip3 installation in virtual environment
      command: /opt/k3s_venv/bin/pip --version
      register: pip_version
      ignore_errors: yes

    - name: Display pip3 version in virtual environment
      debug:
        msg: "pip3 version (virtualenv): {{ pip_version.stdout }}"

    - name: Verify kubernetes Python package installation in virtual environment
      command: /opt/k3s_venv/bin/pip show kubernetes
      register: kubernetes_installed
      ignore_errors: yes

    - name: Display success message if kubernetes package is installed
      debug:
        msg: "Kubernetes Python package installed successfully in virtualenv: {{ kubernetes_installed.stdout }}"
      when: kubernetes_installed is not failed

    - name: Set environment variable for activating virtualenv
      set_fact:
        venv_path: "/opt/k3s_venv"
