---
- name: Set up cgroups and ensure memory controller is active
  hosts: k8s
  become: true
  tasks:
    - name: Install raspberrypi-kernel-headers
      apt:
        name: raspberrypi-kernel-headers
        state: present
        update_cache: yes

    - name: Check if the kernel config file exists
      stat:
        path: "/boot/config-{{ ansible_kernel }}"
      register: kernel_config_file

    - name: Check kernel config for cgroups and memory controller support (if config file exists)
      shell: "grep CONFIG_CGROUP /boot/config-{{ ansible_kernel }}"
      when: kernel_config_file.stat.exists
      register: cgroup_kernel_config
      ignore_errors: yes

    - name: Display kernel cgroup configuration (if config file exists)
      debug:
        msg: "{{ cgroup_kernel_config.stdout }}"
      when: kernel_config_file.stat.exists

    - name: Ensure all kernel parameters are on the same line in cmdline.txt
      lineinfile:
        path: /boot/firmware/cmdline.txt
        line: "console=serial0,115200 console=tty1 root=PARTUUID=3d5c1c3e-02 rootfstype=ext4 fsck.repair=yes rootwait systemd.unified_cgroup_hierarchy=1 cgroup_enable=memory cgroup_memory=1"
        state: present
        backrefs: no

    - name: Check if cgroup memory controller is enabled
      shell: cat /sys/fs/cgroup/cgroup.controllers
      register: cgroup_controllers
      ignore_errors: yes

    - name: Display cgroup controllers
      debug:
        msg: "{{ cgroup_controllers.stdout }}"

    - name: Check current firmware revision
      stat:
        path: /boot/firmware/.firmware_revision
      register: firmware_revision_file

    - name: Read firmware revision
      slurp:
        src: /boot/firmware/.firmware_revision
      when: firmware_revision_file.stat.exists
      register: current_firmware_revision

    - name: Check if firmware is up to date
      set_fact:
        is_firmware_up_to_date: "{{ current_firmware_revision.content | b64decode | trim == 'd399c939a23b0c9ad6bc979a479e413de73a1342' }}"
      when: firmware_revision_file.stat.exists

    - name: Notify that firmware is already up to date
      debug:
        msg: "Firmware is already up to date."
      when: is_firmware_up_to_date

    - name: Upgrade the Raspberry Pi kernel to the latest version if not up to date
      shell: |
        yes | sudo rpi-update
      register: kernel_updated
      when: not is_firmware_up_to_date
      async: 6000    # Setting a 100-minute timeout
      poll: 300      # Polling every 5 minutes to check for completion

    - name: Notify about kernel upgrade completion
      debug:
        msg: "Kernel upgrade completed."

    - name: Reboot the system if necessary
      reboot:
        msg: "Rebooting after kernel upgrade"
      when: kernel_updated.changed
