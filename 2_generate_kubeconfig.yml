---
- name: Generate kubeconfig for K3s Cluster
  hosts: k8s_controlplane[0]  # Target only the first control plane node
  become: true
  gather_facts: false

  vars_files:
    - secrets.yml

  tasks:
    - name: Fetch the control plane IP from inventory
      set_fact:
        control_plane_ip: "{{ hostvars[inventory_hostname]['ansible_host'] }}"

    - name: Fetch the CA certificate from the control plane
      slurp:
        src: /var/lib/rancher/k3s/server/tls/server-ca.crt
      register: ca_cert

    - name: Fetch the K3s node token from the control plane
      slurp:
        src: /var/lib/rancher/k3s/server/node-token
      register: node_token

    - name: Gather necessary variables locally
      set_fact:
        local_ca_cert: "{{ ca_cert.content | b64encode }}"
        local_node_token: "{{ node_token.content }}"
      delegate_to: localhost

    - name: Create kubeconfig locally
      kubernetes.core.kubeconfig:  # Use the module directly
        path: kubeconfig.yaml 
        server: "https://{{ control_plane_ip }}:6443" 
        ca_cert: "{{ local_ca_cert }}" 
        token: "{{ local_node_token }}" 
        context:
          name: default
          cluster: k3s-cluster
          user: admin
        current_context: default

    - name: Distribute kubeconfig to other control plane nodes
      ansible.builtin.copy:
        src: kubeconfig.yaml  # Copy from the local file
        dest: /etc/rancher/k3s/kubeconfig.yaml
        owner: root
        group: root
        mode: '0644'
      loop: "{{ groups['k8s_controlplane'] }}"
      when: inventory_hostname != item


